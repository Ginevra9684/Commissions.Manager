/* This file is automatically generated by ABP framework to use MVC Controllers from javascript. */


// module app

(function(){

  // controller commissions.manager.commissions.commission

  (function(){

    abp.utils.createNamespace(window, 'commissions.manager.commissions.commission');

    commissions.manager.commissions.commission.getCommissionsByCustomer = function(customerId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/commission/commissions-by-customer/' + customerId + '',
        type: 'GET'
      }, ajaxParams));
    };

    commissions.manager.commissions.commission.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/commission',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    commissions.manager.commissions.commission.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/commission/' + id + '',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    commissions.manager.commissions.commission['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/commission/' + id + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

    commissions.manager.commissions.commission.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/commission/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    commissions.manager.commissions.commission.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/commission' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller commissions.manager.customers.customer

  (function(){

    abp.utils.createNamespace(window, 'commissions.manager.customers.customer');

    commissions.manager.customers.customer.getAllCustomersWithCommissions = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/customer/customers-with-commissions',
        type: 'GET'
      }, ajaxParams));
    };

    commissions.manager.customers.customer.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/customer',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    commissions.manager.customers.customer.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/customer/' + id + '',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    commissions.manager.customers.customer['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/customer/' + id + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

    commissions.manager.customers.customer.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/customer/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    commissions.manager.customers.customer.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/customer' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller commissions.manager.employees.employee

  (function(){

    abp.utils.createNamespace(window, 'commissions.manager.employees.employee');

    commissions.manager.employees.employee.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/employee',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    commissions.manager.employees.employee.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/employee/' + id + '',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    commissions.manager.employees.employee['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/employee/' + id + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

    commissions.manager.employees.employee.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/employee/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    commissions.manager.employees.employee.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/employee' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

})();


